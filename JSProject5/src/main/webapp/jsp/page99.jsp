<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8" buffer="1b" autoFlush="false"%>
    <!-- buffer는 넉넉하게 줘야한다 / buffer 부족할시 500에러 -->
    <!-- autoFlush="false" => 버퍼를 (출력하는 공간을) 넘어서도 메모리를 안지워줘서 오버플로우가 발생할 수 있다 -->
<%--
	  4장
	  ===
	  1. JSP 순서 (웹 프로그램은 브라우저 주소창을 통해서 파일을 실행
	             => 실행결과를 메모리에 저장 (HTML/XML만 저장) => 응답 => 브라우저에서 읽어 간다) 주소에는 항상 파일명을 첨부
	                      
	       브라우저에서 a.jsp 찾아달라고 요청하면 웹서버가 받아서 WAS으로 넘긴다
	                           a.jsp               a.jsp
	     1)클라이언트 요청(브라우저) ====> 웹서버(httped) =====> WAS(톰캣, 제우스(실무,유료))
	                                                             |
	                                                       JSP파일 찾기 ==> 없는 경우 (404파일) (404,500파일.. : 톰캣에서 제공)
	                                                             |  찾은 경우
	                                                       JSP를 자바파일로 변경 (a_jsp.java = 서블릿 파일)
	                                                             |
	                                                       변경된 자바파일을 컴파일 시킨다 => 에러가 발생한다면 (500파일 전송)   
	                                                             | 정상수행
	                                                       컴파일된 파일 생성 (바이트 코드) a_jsp.class
	                                                             | 실행
	                                                       메모리에 저장 (결과값)            
	                                                              ===>  HTML만 출력 (<!DOCTYPE html> 부터) (java는 없어짐) 
	                                                                    ==========
	                                                                    => 브라우저가 읽어서 한줄씩 번역 하면 끝
	                                                       *** 자바는 <% %>가 없는 경우
	                                                           브라우저에서 일반 텍스트로 인식              
	     => 일반 자바
	        public class A
	        {
	        	public static void main(String[] arg)
	        	{
	        		System.out.println("Hello Java");    ==>    <%=  %>
	        	}
	        }
	        ==> Hello Java ==> 자바는 번역만하고 출력은 안함, (<% %> 부분은 사라짐) / 출력문만 출력한다 (<%= %> 만 출력)
	        
	        
	  2. buffer(출력 메모리) => 임시 저장공간(클라이언트마다 1개 생성)(새로 생성시 기존꺼 지우고 생성) (page 101)
	                                                  javac         java
	     클라이언트가 요청 ==> 톰캣 (jsp => .java로 변경) => 컴파일 => .class => 실행 => 메모리에 HTML만 저장 (저장되는 장소 = buffer)
	                                                                                 |
	                                                                            브라우저에서 읽어서 출력
	     버퍼 = 임시저장 공간 => 클라이언트마다 1개 생성
	     
	     buffer => 8kb (이상을 초과하면 오류)
	     ======
	        클라이언트 브라우저와 서버 메모리와 연결 (클라이언트당 html을 출력하는 공간이 1개 => 새로고침, 페이지이동시 기존껄 지우고 새로만듬)
	                                        a.jsp에서 => b.jsp를 연결할 경우
	                                        =====
	                                        a는 지우고 b로 바꾼다
	                             1. 버퍼에 HTML을 저장
	                             2. 버퍼에 있는 HTML을 브라우저에서 읽어간다
	                             3. 버퍼에 있는 HTML을 지운다 (a.jsp의 내용은 사라진다)  
	                             4. 버퍼에 새로운 HTML을 저장 (같은 공간에 b.jsp가 새로 생긴다)        
	        ===============================> 내용변경이 되면 => 버퍼를 지우고 다시 쓴다 (autoFlush)
	        (서버는 1개, 여러명이 접근가능)
	        서버는 메모리 공간을 생성 => 클라이언트(사용자)는 메모리 공간에서 데이터를 가져간다 (10만명이면 메모리 공간도 10만개)
	        => 동시에 여러명이 들어가면 메모리 공간이 부족하므로 오류가 생긴다
	     JSP
	     사용자가 만든 파일 = a.jsp -----------> 번역해서 저장
	                             톰캣이 변경
	  3. 배포
 --%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
</head>
<body>
<%
	for(int i=0; i<100000; i++)
	{
%>
		<%= "Hello"%>
<% 
 	}
 %>	
	
%>
</body>
</html>